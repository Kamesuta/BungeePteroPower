###########################################################
#                    BungeePteroPower                     #
#                       by Kamesuta                       #
###########################################################

# Version of the configuration file
# Do not edit this value until the "/ptero check" asks you to do so.
version: 2

# Check for updates
# If true, the plugin will check for updates on startup.
# If a new version is available, a message will be sent to the console and to players with the permission "ptero.reload".
checkUpdate: true

# Language
# Supported languages: en, ja, fr, ro
# You can add your own language file in the plugins/BungeePteroPower directory.
language: en

# When no one enters the server after starting the server,
# the server will be stopped after this time has elapsed according to the timeout setting.
startTimeout: 120

# Power Controller Type
# Supported types: pterodactyl
# You can add your own power controller using API.
powerControllerType: pterodactyl
  
# Perform synchronous pinging to the server during login. (Experimental feature)
# When enabled, pinging the server during login will happen synchronously rather than asynchronously.
# This allows displaying BungeePteroPower messages instead of the "Could not connect to a default or fallback server" message upon login.
# The default value is `false`. Enabling this can be useful if you want to set servers (such as lobby servers) to a suspended state in BungeePteroPower immediately after login.
useSynchronousPing: false

# Configure settings for the feature to reset the server from a backup when it is stopped
restoreOnStop:
  # Set the maximum waiting time after sending the stop signal for the server to stop. (The restore will be performed after the server stops)
  timeout: 120

  # Set the interval for checking if the server is offline after sending the stop signal.
  pingInterval: 5

# This is used to check the server status to transfer players after the server starts
startupJoin:
  # The number of seconds the plugin will try to connect the player to the desired server
  # Set this to the maximum time the server can take to start
  # If you set it to 0, the plugin will not try to connect the player to the server
  timeout: 60

  # Once the server is pingable, wait the specified amount of seconds before sending the player to the server
  # This is useful to wait for plugins like LuckPerms to fully load
  # If you set it to 0, the player will be connected as soon as the server is pingable
  joinDelay: 5

  # The number of seconds between pings to check the server status
  pingInterval: 3

# Pterodactyl configuration
pterodactyl:
  # The URL of your pterodactyl panel
  # If you use Cloudflare Tunnel, you need to allow the ip in the bypass setting.
  url: "https://panel.example.com"
  # The client api key of your pterodactyl panel. It starts with "ptlc_".
  # You can find the client api key in the "API Credentials" tab of the "Account" page.
  apiKey: "ptlc_000000000000000000000000000000000000000000"

# Crafty configuration
crafty:
  # The URL of your crafty panel
  # If you use Cloudflare Tunnel, you need to allow the ip in the bypass setting.
  url: "https://panel.example.com"
  # The client api key of your crafty panel. Can be found in Panel Config > Users > Edit User > API Keys
  # The only permission you need is: COMMANDS
  apiKey: ""

# Per server configuration
servers:
  pvp:
    # Pterodactyl server ID
    # You can find the Pterodactyl server ID in the URL of the server page.
    # For example, if the URL is https://panel.example.com/server/1234abcd, the server ID is 1234abcd.
    id: 1234abcd
    # The time in seconds to stop the server after the last player leaves.
    # If you don't want to stop the server automatically, set it to -1.
    # If you set it to 0, the server will be stopped immediately after the last player leaves.
    timeout: 30

  hub:
    id: abcd1234
    timeout: -1

  minigame:
    id: 1a2b3c4d
    timeout: 30
    # The UUID of the backup to restore when the server stops.
    # If this setting is empty or removed, no restore from backup will be performed when the server stops.
    # Useful for servers that need to be reset after each game.
    backupId: 00000000-0000-0000-0000-000000000000